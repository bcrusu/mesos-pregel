// Code generated by protoc-gen-gogo.
// source: private.proto
// DO NOT EDIT!

package protos

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ExecTaskParams struct {
	TaskId          string               `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	JobId           string               `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Store           string               `protobuf:"bytes,3,opt,name=store,proto3" json:"store,omitempty"`
	StoreParams     []byte               `protobuf:"bytes,4,opt,name=storeParams,proto3" json:"storeParams,omitempty"`
	Algorithm       string               `protobuf:"bytes,5,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	AlgorithmParams []byte               `protobuf:"bytes,6,opt,name=algorithmParams,proto3" json:"algorithmParams,omitempty"`
	SuperstepParams *ExecSuperstepParams `protobuf:"bytes,7,opt,name=superstepParams" json:"superstepParams,omitempty"`
}

func (m *ExecTaskParams) Reset()                    { *m = ExecTaskParams{} }
func (m *ExecTaskParams) String() string            { return proto.CompactTextString(m) }
func (*ExecTaskParams) ProtoMessage()               {}
func (*ExecTaskParams) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{0} }

func (m *ExecTaskParams) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ExecTaskParams) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *ExecTaskParams) GetStore() string {
	if m != nil {
		return m.Store
	}
	return ""
}

func (m *ExecTaskParams) GetStoreParams() []byte {
	if m != nil {
		return m.StoreParams
	}
	return nil
}

func (m *ExecTaskParams) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *ExecTaskParams) GetAlgorithmParams() []byte {
	if m != nil {
		return m.AlgorithmParams
	}
	return nil
}

func (m *ExecTaskParams) GetSuperstepParams() *ExecSuperstepParams {
	if m != nil {
		return m.SuperstepParams
	}
	return nil
}

type ExecTaskResult struct {
	TaskId          string               `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	JobId           string               `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	SuperstepResult *ExecSuperstepResult `protobuf:"bytes,3,opt,name=superstepResult" json:"superstepResult,omitempty"`
}

func (m *ExecTaskResult) Reset()                    { *m = ExecTaskResult{} }
func (m *ExecTaskResult) String() string            { return proto.CompactTextString(m) }
func (*ExecTaskResult) ProtoMessage()               {}
func (*ExecTaskResult) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{1} }

func (m *ExecTaskResult) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ExecTaskResult) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *ExecTaskResult) GetSuperstepResult() *ExecSuperstepResult {
	if m != nil {
		return m.SuperstepResult
	}
	return nil
}

type ExecSuperstepParams struct {
	Superstep   int32         `protobuf:"varint,1,opt,name=superstep,proto3" json:"superstep,omitempty"`
	VertexRange []byte        `protobuf:"bytes,2,opt,name=vertexRange,proto3" json:"vertexRange,omitempty"`
	Aggregators []*Aggregator `protobuf:"bytes,3,rep,name=aggregators" json:"aggregators,omitempty"`
}

func (m *ExecSuperstepParams) Reset()                    { *m = ExecSuperstepParams{} }
func (m *ExecSuperstepParams) String() string            { return proto.CompactTextString(m) }
func (*ExecSuperstepParams) ProtoMessage()               {}
func (*ExecSuperstepParams) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{2} }

func (m *ExecSuperstepParams) GetSuperstep() int32 {
	if m != nil {
		return m.Superstep
	}
	return 0
}

func (m *ExecSuperstepParams) GetVertexRange() []byte {
	if m != nil {
		return m.VertexRange
	}
	return nil
}

func (m *ExecSuperstepParams) GetAggregators() []*Aggregator {
	if m != nil {
		return m.Aggregators
	}
	return nil
}

type ExecSuperstepResult struct {
	Aggregators []*Aggregator `protobuf:"bytes,1,rep,name=aggregators" json:"aggregators,omitempty"`
	Stats       *Stats        `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
}

func (m *ExecSuperstepResult) Reset()                    { *m = ExecSuperstepResult{} }
func (m *ExecSuperstepResult) String() string            { return proto.CompactTextString(m) }
func (*ExecSuperstepResult) ProtoMessage()               {}
func (*ExecSuperstepResult) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{3} }

func (m *ExecSuperstepResult) GetAggregators() []*Aggregator {
	if m != nil {
		return m.Aggregators
	}
	return nil
}

func (m *ExecSuperstepResult) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type Aggregator struct {
	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Aggregator) Reset()                    { *m = Aggregator{} }
func (m *Aggregator) String() string            { return proto.CompactTextString(m) }
func (*Aggregator) ProtoMessage()               {}
func (*Aggregator) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{4} }

func (m *Aggregator) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Aggregator) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Aggregator) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type JobCheckpoint struct {
	Ranges              []*JobCheckpoint_Range   `protobuf:"bytes,1,rep,name=ranges" json:"ranges,omitempty"`
	Hosts               []*JobCheckpoint_Host    `protobuf:"bytes,2,rep,name=hosts" json:"hosts,omitempty"`
	Tasks               []*JobCheckpoint_Task    `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
	Superstep           *JobCheckpoint_Superstep `protobuf:"bytes,4,opt,name=superstep" json:"superstep,omitempty"`
	PreviousAggregators []*Aggregator            `protobuf:"bytes,5,rep,name=previousAggregators" json:"previousAggregators,omitempty"`
	TotalStats          *Stats                   `protobuf:"bytes,6,opt,name=totalStats" json:"totalStats,omitempty"`
}

func (m *JobCheckpoint) Reset()                    { *m = JobCheckpoint{} }
func (m *JobCheckpoint) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint) ProtoMessage()               {}
func (*JobCheckpoint) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{5} }

func (m *JobCheckpoint) GetRanges() []*JobCheckpoint_Range {
	if m != nil {
		return m.Ranges
	}
	return nil
}

func (m *JobCheckpoint) GetHosts() []*JobCheckpoint_Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *JobCheckpoint) GetTasks() []*JobCheckpoint_Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *JobCheckpoint) GetSuperstep() *JobCheckpoint_Superstep {
	if m != nil {
		return m.Superstep
	}
	return nil
}

func (m *JobCheckpoint) GetPreviousAggregators() []*Aggregator {
	if m != nil {
		return m.PreviousAggregators
	}
	return nil
}

func (m *JobCheckpoint) GetTotalStats() *Stats {
	if m != nil {
		return m.TotalStats
	}
	return nil
}

type JobCheckpoint_Range struct {
	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VertexRange []byte  `protobuf:"bytes,2,opt,name=vertexRange,proto3" json:"vertexRange,omitempty"`
	Hosts       []int32 `protobuf:"varint,3,rep,packed,name=hosts" json:"hosts,omitempty"`
}

func (m *JobCheckpoint_Range) Reset()                    { *m = JobCheckpoint_Range{} }
func (m *JobCheckpoint_Range) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint_Range) ProtoMessage()               {}
func (*JobCheckpoint_Range) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{5, 0} }

func (m *JobCheckpoint_Range) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JobCheckpoint_Range) GetVertexRange() []byte {
	if m != nil {
		return m.VertexRange
	}
	return nil
}

func (m *JobCheckpoint_Range) GetHosts() []int32 {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type JobCheckpoint_Host struct {
	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname  string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	FailCount int32  `protobuf:"varint,3,opt,name=failCount,proto3" json:"failCount,omitempty"`
}

func (m *JobCheckpoint_Host) Reset()                    { *m = JobCheckpoint_Host{} }
func (m *JobCheckpoint_Host) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint_Host) ProtoMessage()               {}
func (*JobCheckpoint_Host) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{5, 1} }

func (m *JobCheckpoint_Host) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JobCheckpoint_Host) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *JobCheckpoint_Host) GetFailCount() int32 {
	if m != nil {
		return m.FailCount
	}
	return 0
}

type JobCheckpoint_Task struct {
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RangeId   int32  `protobuf:"varint,2,opt,name=rangeId,proto3" json:"rangeId,omitempty"`
	HostId    int32  `protobuf:"varint,3,opt,name=hostId,proto3" json:"hostId,omitempty"`
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (m *JobCheckpoint_Task) Reset()                    { *m = JobCheckpoint_Task{} }
func (m *JobCheckpoint_Task) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint_Task) ProtoMessage()               {}
func (*JobCheckpoint_Task) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{5, 2} }

func (m *JobCheckpoint_Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobCheckpoint_Task) GetRangeId() int32 {
	if m != nil {
		return m.RangeId
	}
	return 0
}

func (m *JobCheckpoint_Task) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *JobCheckpoint_Task) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type JobCheckpoint_Superstep struct {
	Number      int32         `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Aggregators []*Aggregator `protobuf:"bytes,2,rep,name=aggregators" json:"aggregators,omitempty"`
	Completed   []int32       `protobuf:"varint,3,rep,packed,name=completed" json:"completed,omitempty"`
	Stats       *Stats        `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *JobCheckpoint_Superstep) Reset()         { *m = JobCheckpoint_Superstep{} }
func (m *JobCheckpoint_Superstep) String() string { return proto.CompactTextString(m) }
func (*JobCheckpoint_Superstep) ProtoMessage()    {}
func (*JobCheckpoint_Superstep) Descriptor() ([]byte, []int) {
	return fileDescriptorPrivate, []int{5, 3}
}

func (m *JobCheckpoint_Superstep) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *JobCheckpoint_Superstep) GetAggregators() []*Aggregator {
	if m != nil {
		return m.Aggregators
	}
	return nil
}

func (m *JobCheckpoint_Superstep) GetCompleted() []int32 {
	if m != nil {
		return m.Completed
	}
	return nil
}

func (m *JobCheckpoint_Superstep) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterType((*ExecTaskParams)(nil), "protos.ExecTaskParams")
	proto.RegisterType((*ExecTaskResult)(nil), "protos.ExecTaskResult")
	proto.RegisterType((*ExecSuperstepParams)(nil), "protos.ExecSuperstepParams")
	proto.RegisterType((*ExecSuperstepResult)(nil), "protos.ExecSuperstepResult")
	proto.RegisterType((*Aggregator)(nil), "protos.Aggregator")
	proto.RegisterType((*JobCheckpoint)(nil), "protos.JobCheckpoint")
	proto.RegisterType((*JobCheckpoint_Range)(nil), "protos.JobCheckpoint.Range")
	proto.RegisterType((*JobCheckpoint_Host)(nil), "protos.JobCheckpoint.Host")
	proto.RegisterType((*JobCheckpoint_Task)(nil), "protos.JobCheckpoint.Task")
	proto.RegisterType((*JobCheckpoint_Superstep)(nil), "protos.JobCheckpoint.Superstep")
}

func init() { proto.RegisterFile("private.proto", fileDescriptorPrivate) }

var fileDescriptorPrivate = []byte{
	// 602 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0x13, 0x3b, 0x25, 0x93, 0xa6, 0x95, 0xb6, 0x15, 0xb2, 0x4c, 0x25, 0x22, 0x73, 0xc9,
	0x85, 0x0a, 0xa5, 0x5c, 0x39, 0x54, 0xa5, 0x88, 0x70, 0xa1, 0xda, 0xf6, 0x0f, 0x6c, 0x92, 0x6d,
	0x62, 0x62, 0x67, 0xad, 0xdd, 0x75, 0x54, 0x7e, 0x40, 0xb9, 0xf0, 0x17, 0xf8, 0xb1, 0x68, 0x67,
	0xd7, 0x1f, 0x75, 0x13, 0x51, 0x4e, 0xf1, 0x3c, 0xbf, 0x79, 0x1a, 0xbf, 0x37, 0x13, 0x18, 0xe6,
	0x32, 0xd9, 0x32, 0xcd, 0xcf, 0x73, 0x29, 0xb4, 0x20, 0x3d, 0xfc, 0x51, 0xd1, 0x50, 0x71, 0xb9,
	0x4d, 0xe6, 0x0e, 0x8e, 0x1f, 0x3b, 0x70, 0x74, 0xfd, 0xc0, 0xe7, 0x77, 0x4c, 0xad, 0x6f, 0x98,
	0x64, 0x99, 0x22, 0xaf, 0xa1, 0xa7, 0x99, 0x5a, 0x4f, 0x17, 0xa1, 0x37, 0xf2, 0xc6, 0x7d, 0xea,
	0x2a, 0x72, 0x0a, 0xc1, 0x0f, 0x31, 0x9b, 0x2e, 0xc2, 0x0e, 0xc2, 0xb6, 0x30, 0xa8, 0xd2, 0x42,
	0xf2, 0xb0, 0x6b, 0x51, 0x2c, 0xc8, 0x08, 0x06, 0xf8, 0x60, 0x25, 0x43, 0x7f, 0xe4, 0x8d, 0x0f,
	0x69, 0x13, 0x22, 0x67, 0xd0, 0x67, 0xe9, 0x52, 0xc8, 0x44, 0xaf, 0xb2, 0x30, 0xc0, 0xde, 0x1a,
	0x20, 0x63, 0x38, 0xae, 0x0a, 0xa7, 0xd1, 0x43, 0x8d, 0x36, 0x4c, 0xae, 0xe1, 0x58, 0x15, 0x39,
	0x97, 0x4a, 0xf3, 0xdc, 0x31, 0x0f, 0x46, 0xde, 0x78, 0x30, 0x79, 0x63, 0xbf, 0x50, 0x9d, 0x9b,
	0xcf, 0xbb, 0x7d, 0x4a, 0xa1, 0xed, 0x9e, 0xf8, 0xd1, 0xab, 0x7d, 0xa0, 0x5c, 0x15, 0xa9, 0xfe,
	0x4f, 0x1f, 0x9a, 0x73, 0x58, 0x01, 0x74, 0x64, 0xdf, 0x1c, 0x96, 0x42, 0xdb, 0x3d, 0xf1, 0x6f,
	0x0f, 0x4e, 0x76, 0x0c, 0x6c, 0xec, 0xaa, 0xa8, 0x38, 0x4f, 0x40, 0x6b, 0xc0, 0xd8, 0xbd, 0xe5,
	0x52, 0xf3, 0x07, 0xca, 0x36, 0x4b, 0x8e, 0x83, 0x1d, 0xd2, 0x26, 0x44, 0x3e, 0xc2, 0x80, 0x2d,
	0x97, 0x92, 0x2f, 0x99, 0x16, 0x52, 0x85, 0xdd, 0x51, 0x77, 0x3c, 0x98, 0x90, 0x72, 0xb4, 0xcb,
	0xea, 0x15, 0x6d, 0xd2, 0xe2, 0xbc, 0x35, 0x8c, 0x73, 0xa6, 0x25, 0xe6, 0xbd, 0x48, 0x8c, 0xbc,
	0x33, 0x9b, 0xc2, 0xb4, 0xc2, 0xf1, 0x06, 0x93, 0x61, 0xc9, 0xbf, 0x35, 0x20, 0xb5, 0xef, 0xe2,
	0x2f, 0x00, 0x75, 0x3f, 0x21, 0xe0, 0xeb, 0x9f, 0x39, 0x77, 0x01, 0xe0, 0x33, 0x39, 0x82, 0x4e,
	0x52, 0x7a, 0xdf, 0x49, 0x30, 0x8e, 0x2d, 0x4b, 0x0b, 0xbb, 0x80, 0x87, 0xd4, 0x16, 0xf1, 0xaf,
	0x1e, 0x0c, 0xbf, 0x89, 0xd9, 0xd5, 0x8a, 0xcf, 0xd7, 0xb9, 0x48, 0x36, 0x9a, 0x5c, 0x40, 0x4f,
	0x1a, 0x2b, 0xca, 0x79, 0xab, 0x5c, 0x9e, 0xd0, 0xce, 0xd1, 0x2e, 0xea, 0xa8, 0xe4, 0x03, 0x04,
	0x2b, 0xa1, 0x70, 0x66, 0xd3, 0x13, 0xed, 0xee, 0xf9, 0x2a, 0x94, 0xa6, 0x96, 0x68, 0x3a, 0xcc,
	0x9e, 0x94, 0x16, 0xef, 0xe9, 0xc0, 0x35, 0xb3, 0x44, 0xf2, 0xa9, 0x19, 0xad, 0x8f, 0xde, 0xbc,
	0xdd, 0xdd, 0x55, 0xe7, 0xd0, 0xc8, 0xfe, 0x33, 0x9c, 0xe4, 0x92, 0x6f, 0x13, 0x51, 0xa8, 0xcb,
	0x46, 0x28, 0xc1, 0xde, 0x50, 0x76, 0xd1, 0xc9, 0x7b, 0x00, 0x2d, 0x34, 0x4b, 0x31, 0x0c, 0xbc,
	0xb5, 0x67, 0x09, 0x35, 0x08, 0xd1, 0x77, 0x08, 0xec, 0x5e, 0xd9, 0x34, 0xec, 0x42, 0x9a, 0x34,
	0xfe, 0xbd, 0x89, 0xa7, 0xa5, 0xa5, 0xc6, 0xa0, 0xc0, 0xd9, 0x16, 0xdd, 0x80, 0x6f, 0x5c, 0x7c,
	0xa6, 0x17, 0xc1, 0x2b, 0x43, 0xd8, 0xb0, 0x8c, 0xbb, 0xcc, 0xab, 0xda, 0xdc, 0xc4, 0x3d, 0x4b,
	0xd2, 0x2b, 0x51, 0x6c, 0xec, 0xb1, 0x05, 0xb4, 0x06, 0xa2, 0x7b, 0xf0, 0x8d, 0xcb, 0x0d, 0x45,
	0xbb, 0x2f, 0x21, 0x1c, 0x60, 0xb8, 0xee, 0x80, 0x03, 0x5a, 0x96, 0xe6, 0xe0, 0x8d, 0xf6, 0x74,
	0xe1, 0xc4, 0x5c, 0x85, 0xb7, 0xa7, 0x99, 0xd4, 0x77, 0x49, 0xc6, 0x31, 0xa0, 0x2e, 0xad, 0x81,
	0xe8, 0x8f, 0x07, 0xfd, 0x2a, 0x18, 0xa3, 0xb1, 0x29, 0xb2, 0x19, 0x97, 0xee, 0x1b, 0x5c, 0xd5,
	0x3e, 0x99, 0xce, 0xcb, 0x4e, 0xe6, 0x0c, 0xfa, 0x73, 0x91, 0xe5, 0x29, 0xd7, 0x7c, 0xe1, 0xfc,
	0xaa, 0x81, 0xfa, 0xa0, 0xfc, 0xfd, 0x07, 0x35, 0xb3, 0xff, 0xfb, 0x17, 0x7f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x28, 0x8b, 0xb1, 0x1c, 0x0f, 0x06, 0x00, 0x00,
}
