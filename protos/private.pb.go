// Code generated by protoc-gen-gogo.
// source: private.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	private.proto

It has these top-level messages:
	ExecTaskParams
	ExecTaskResult
	ExecSuperstepParams
	ExecSuperstepResult
	Aggregator
	Stats
	JobCheckpoint
*/
package protos

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ExecTaskParams struct {
	TaskId          string               `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	JobId           string               `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Store           string               `protobuf:"bytes,3,opt,name=store,proto3" json:"store,omitempty"`
	StoreParams     []byte               `protobuf:"bytes,4,opt,name=storeParams,proto3" json:"storeParams,omitempty"`
	Algorithm       string               `protobuf:"bytes,5,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	AlgorithmParams []byte               `protobuf:"bytes,6,opt,name=algorithmParams,proto3" json:"algorithmParams,omitempty"`
	SuperstepParams *ExecSuperstepParams `protobuf:"bytes,7,opt,name=superstepParams" json:"superstepParams,omitempty"`
}

func (m *ExecTaskParams) Reset()                    { *m = ExecTaskParams{} }
func (m *ExecTaskParams) String() string            { return proto.CompactTextString(m) }
func (*ExecTaskParams) ProtoMessage()               {}
func (*ExecTaskParams) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{0} }

func (m *ExecTaskParams) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ExecTaskParams) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *ExecTaskParams) GetStore() string {
	if m != nil {
		return m.Store
	}
	return ""
}

func (m *ExecTaskParams) GetStoreParams() []byte {
	if m != nil {
		return m.StoreParams
	}
	return nil
}

func (m *ExecTaskParams) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *ExecTaskParams) GetAlgorithmParams() []byte {
	if m != nil {
		return m.AlgorithmParams
	}
	return nil
}

func (m *ExecTaskParams) GetSuperstepParams() *ExecSuperstepParams {
	if m != nil {
		return m.SuperstepParams
	}
	return nil
}

type ExecTaskResult struct {
	TaskId          string               `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	JobId           string               `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	SuperstepResult *ExecSuperstepResult `protobuf:"bytes,3,opt,name=superstepResult" json:"superstepResult,omitempty"`
}

func (m *ExecTaskResult) Reset()                    { *m = ExecTaskResult{} }
func (m *ExecTaskResult) String() string            { return proto.CompactTextString(m) }
func (*ExecTaskResult) ProtoMessage()               {}
func (*ExecTaskResult) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{1} }

func (m *ExecTaskResult) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ExecTaskResult) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *ExecTaskResult) GetSuperstepResult() *ExecSuperstepResult {
	if m != nil {
		return m.SuperstepResult
	}
	return nil
}

type ExecSuperstepParams struct {
	Superstep   int32         `protobuf:"varint,1,opt,name=superstep,proto3" json:"superstep,omitempty"`
	VertexRange []byte        `protobuf:"bytes,2,opt,name=vertexRange,proto3" json:"vertexRange,omitempty"`
	Aggregators []*Aggregator `protobuf:"bytes,3,rep,name=aggregators" json:"aggregators,omitempty"`
}

func (m *ExecSuperstepParams) Reset()                    { *m = ExecSuperstepParams{} }
func (m *ExecSuperstepParams) String() string            { return proto.CompactTextString(m) }
func (*ExecSuperstepParams) ProtoMessage()               {}
func (*ExecSuperstepParams) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{2} }

func (m *ExecSuperstepParams) GetSuperstep() int32 {
	if m != nil {
		return m.Superstep
	}
	return 0
}

func (m *ExecSuperstepParams) GetVertexRange() []byte {
	if m != nil {
		return m.VertexRange
	}
	return nil
}

func (m *ExecSuperstepParams) GetAggregators() []*Aggregator {
	if m != nil {
		return m.Aggregators
	}
	return nil
}

type ExecSuperstepResult struct {
	Aggregators []*Aggregator `protobuf:"bytes,1,rep,name=aggregators" json:"aggregators,omitempty"`
	Stats       *Stats        `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
}

func (m *ExecSuperstepResult) Reset()                    { *m = ExecSuperstepResult{} }
func (m *ExecSuperstepResult) String() string            { return proto.CompactTextString(m) }
func (*ExecSuperstepResult) ProtoMessage()               {}
func (*ExecSuperstepResult) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{3} }

func (m *ExecSuperstepResult) GetAggregators() []*Aggregator {
	if m != nil {
		return m.Aggregators
	}
	return nil
}

func (m *ExecSuperstepResult) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type Aggregator struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Aggregator) Reset()                    { *m = Aggregator{} }
func (m *Aggregator) String() string            { return proto.CompactTextString(m) }
func (*Aggregator) ProtoMessage()               {}
func (*Aggregator) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{4} }

func (m *Aggregator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Aggregator) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Aggregator) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Stats struct {
	TotalDuration     int64 `protobuf:"varint,1,opt,name=totalDuration,proto3" json:"totalDuration,omitempty"`
	ComputedCount     int32 `protobuf:"varint,2,opt,name=computedCount,proto3" json:"computedCount,omitempty"`
	ComputeDuration   int64 `protobuf:"varint,3,opt,name=computeDuration,proto3" json:"computeDuration,omitempty"`
	SentMessagesCount int32 `protobuf:"varint,4,opt,name=sentMessagesCount,proto3" json:"sentMessagesCount,omitempty"`
	HaltedCount       int32 `protobuf:"varint,5,opt,name=haltedCount,proto3" json:"haltedCount,omitempty"`
	InactiveCount     int32 `protobuf:"varint,6,opt,name=inactiveCount,proto3" json:"inactiveCount,omitempty"`
}

func (m *Stats) Reset()                    { *m = Stats{} }
func (m *Stats) String() string            { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()               {}
func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{5} }

func (m *Stats) GetTotalDuration() int64 {
	if m != nil {
		return m.TotalDuration
	}
	return 0
}

func (m *Stats) GetComputedCount() int32 {
	if m != nil {
		return m.ComputedCount
	}
	return 0
}

func (m *Stats) GetComputeDuration() int64 {
	if m != nil {
		return m.ComputeDuration
	}
	return 0
}

func (m *Stats) GetSentMessagesCount() int32 {
	if m != nil {
		return m.SentMessagesCount
	}
	return 0
}

func (m *Stats) GetHaltedCount() int32 {
	if m != nil {
		return m.HaltedCount
	}
	return 0
}

func (m *Stats) GetInactiveCount() int32 {
	if m != nil {
		return m.InactiveCount
	}
	return 0
}

type JobCheckpoint struct {
	Ranges              []*JobCheckpoint_Range   `protobuf:"bytes,1,rep,name=ranges" json:"ranges,omitempty"`
	Hosts               []*JobCheckpoint_Host    `protobuf:"bytes,2,rep,name=hosts" json:"hosts,omitempty"`
	Tasks               []*JobCheckpoint_Task    `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
	Superstep           *JobCheckpoint_Superstep `protobuf:"bytes,4,opt,name=superstep" json:"superstep,omitempty"`
	PreviousAggregators []*Aggregator            `protobuf:"bytes,5,rep,name=previousAggregators" json:"previousAggregators,omitempty"`
	TotalStats          *Stats                   `protobuf:"bytes,6,opt,name=totalStats" json:"totalStats,omitempty"`
}

func (m *JobCheckpoint) Reset()                    { *m = JobCheckpoint{} }
func (m *JobCheckpoint) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint) ProtoMessage()               {}
func (*JobCheckpoint) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{6} }

func (m *JobCheckpoint) GetRanges() []*JobCheckpoint_Range {
	if m != nil {
		return m.Ranges
	}
	return nil
}

func (m *JobCheckpoint) GetHosts() []*JobCheckpoint_Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *JobCheckpoint) GetTasks() []*JobCheckpoint_Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *JobCheckpoint) GetSuperstep() *JobCheckpoint_Superstep {
	if m != nil {
		return m.Superstep
	}
	return nil
}

func (m *JobCheckpoint) GetPreviousAggregators() []*Aggregator {
	if m != nil {
		return m.PreviousAggregators
	}
	return nil
}

func (m *JobCheckpoint) GetTotalStats() *Stats {
	if m != nil {
		return m.TotalStats
	}
	return nil
}

type JobCheckpoint_Range struct {
	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VertexRange []byte  `protobuf:"bytes,2,opt,name=vertexRange,proto3" json:"vertexRange,omitempty"`
	Hosts       []int32 `protobuf:"varint,3,rep,packed,name=hosts" json:"hosts,omitempty"`
}

func (m *JobCheckpoint_Range) Reset()                    { *m = JobCheckpoint_Range{} }
func (m *JobCheckpoint_Range) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint_Range) ProtoMessage()               {}
func (*JobCheckpoint_Range) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{6, 0} }

func (m *JobCheckpoint_Range) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JobCheckpoint_Range) GetVertexRange() []byte {
	if m != nil {
		return m.VertexRange
	}
	return nil
}

func (m *JobCheckpoint_Range) GetHosts() []int32 {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type JobCheckpoint_Host struct {
	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname  string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	FailCount int32  `protobuf:"varint,3,opt,name=failCount,proto3" json:"failCount,omitempty"`
}

func (m *JobCheckpoint_Host) Reset()                    { *m = JobCheckpoint_Host{} }
func (m *JobCheckpoint_Host) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint_Host) ProtoMessage()               {}
func (*JobCheckpoint_Host) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{6, 1} }

func (m *JobCheckpoint_Host) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JobCheckpoint_Host) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *JobCheckpoint_Host) GetFailCount() int32 {
	if m != nil {
		return m.FailCount
	}
	return 0
}

type JobCheckpoint_Task struct {
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RangeId   int32  `protobuf:"varint,2,opt,name=rangeId,proto3" json:"rangeId,omitempty"`
	HostId    int32  `protobuf:"varint,3,opt,name=hostId,proto3" json:"hostId,omitempty"`
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (m *JobCheckpoint_Task) Reset()                    { *m = JobCheckpoint_Task{} }
func (m *JobCheckpoint_Task) String() string            { return proto.CompactTextString(m) }
func (*JobCheckpoint_Task) ProtoMessage()               {}
func (*JobCheckpoint_Task) Descriptor() ([]byte, []int) { return fileDescriptorPrivate, []int{6, 2} }

func (m *JobCheckpoint_Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobCheckpoint_Task) GetRangeId() int32 {
	if m != nil {
		return m.RangeId
	}
	return 0
}

func (m *JobCheckpoint_Task) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *JobCheckpoint_Task) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type JobCheckpoint_Superstep struct {
	Number      int32         `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Aggregators []*Aggregator `protobuf:"bytes,2,rep,name=aggregators" json:"aggregators,omitempty"`
	Completed   []int32       `protobuf:"varint,3,rep,packed,name=completed" json:"completed,omitempty"`
	Stats       *Stats        `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *JobCheckpoint_Superstep) Reset()         { *m = JobCheckpoint_Superstep{} }
func (m *JobCheckpoint_Superstep) String() string { return proto.CompactTextString(m) }
func (*JobCheckpoint_Superstep) ProtoMessage()    {}
func (*JobCheckpoint_Superstep) Descriptor() ([]byte, []int) {
	return fileDescriptorPrivate, []int{6, 3}
}

func (m *JobCheckpoint_Superstep) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *JobCheckpoint_Superstep) GetAggregators() []*Aggregator {
	if m != nil {
		return m.Aggregators
	}
	return nil
}

func (m *JobCheckpoint_Superstep) GetCompleted() []int32 {
	if m != nil {
		return m.Completed
	}
	return nil
}

func (m *JobCheckpoint_Superstep) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterType((*ExecTaskParams)(nil), "protos.ExecTaskParams")
	proto.RegisterType((*ExecTaskResult)(nil), "protos.ExecTaskResult")
	proto.RegisterType((*ExecSuperstepParams)(nil), "protos.ExecSuperstepParams")
	proto.RegisterType((*ExecSuperstepResult)(nil), "protos.ExecSuperstepResult")
	proto.RegisterType((*Aggregator)(nil), "protos.Aggregator")
	proto.RegisterType((*Stats)(nil), "protos.Stats")
	proto.RegisterType((*JobCheckpoint)(nil), "protos.JobCheckpoint")
	proto.RegisterType((*JobCheckpoint_Range)(nil), "protos.JobCheckpoint.Range")
	proto.RegisterType((*JobCheckpoint_Host)(nil), "protos.JobCheckpoint.Host")
	proto.RegisterType((*JobCheckpoint_Task)(nil), "protos.JobCheckpoint.Task")
	proto.RegisterType((*JobCheckpoint_Superstep)(nil), "protos.JobCheckpoint.Superstep")
}

func init() { proto.RegisterFile("private.proto", fileDescriptorPrivate) }

var fileDescriptorPrivate = []byte{
	// 689 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x4e, 0xdb, 0x4c,
	0x10, 0x95, 0x63, 0x3b, 0x7c, 0x99, 0x10, 0xd0, 0xb7, 0xa0, 0xca, 0x4a, 0x91, 0x1a, 0xb9, 0xbd,
	0xc8, 0x45, 0x8b, 0x2a, 0xe8, 0x6d, 0x2f, 0x10, 0x50, 0x95, 0x4a, 0x55, 0xd1, 0xc2, 0x0b, 0x6c,
	0x92, 0x25, 0x71, 0x71, 0xbc, 0xd6, 0xee, 0x3a, 0xe2, 0x05, 0xe8, 0x4d, 0x5f, 0xa1, 0x6f, 0xd9,
	0x17, 0xa8, 0x76, 0x76, 0xfd, 0x13, 0x93, 0xa8, 0xf4, 0x8a, 0xcc, 0xf1, 0x99, 0xe3, 0xf1, 0xcc,
	0x99, 0x01, 0x06, 0xb9, 0x4c, 0x56, 0x4c, 0xf3, 0xe3, 0x5c, 0x0a, 0x2d, 0x48, 0x17, 0xff, 0xa8,
	0xf8, 0xb1, 0x03, 0x7b, 0x97, 0x0f, 0x7c, 0x7a, 0xcb, 0xd4, 0xfd, 0x35, 0x93, 0x6c, 0xa9, 0xc8,
	0x0b, 0xe8, 0x6a, 0xa6, 0xee, 0xaf, 0x66, 0x91, 0x37, 0xf2, 0xc6, 0x3d, 0xea, 0x22, 0x72, 0x08,
	0xe1, 0x77, 0x31, 0xb9, 0x9a, 0x45, 0x1d, 0x84, 0x6d, 0x60, 0x50, 0xa5, 0x85, 0xe4, 0x91, 0x6f,
	0x51, 0x0c, 0xc8, 0x08, 0xfa, 0xf8, 0xc3, 0x4a, 0x46, 0xc1, 0xc8, 0x1b, 0xef, 0xd2, 0x26, 0x44,
	0x8e, 0xa0, 0xc7, 0xd2, 0xb9, 0x90, 0x89, 0x5e, 0x2c, 0xa3, 0x10, 0x73, 0x6b, 0x80, 0x8c, 0x61,
	0xbf, 0x0a, 0x9c, 0x46, 0x17, 0x35, 0xda, 0x30, 0xb9, 0x84, 0x7d, 0x55, 0xe4, 0x5c, 0x2a, 0xcd,
	0x73, 0xc7, 0xdc, 0x19, 0x79, 0xe3, 0xfe, 0xc9, 0x4b, 0xfb, 0xa5, 0xea, 0xd8, 0x7c, 0xde, 0xcd,
	0x3a, 0x85, 0xb6, 0x73, 0xe2, 0x47, 0xaf, 0xee, 0x03, 0xe5, 0xaa, 0x48, 0xf5, 0x3f, 0xf6, 0xa1,
	0x59, 0x87, 0x15, 0xc0, 0x8e, 0x6c, 0xab, 0xc3, 0x52, 0x68, 0x3b, 0x27, 0xfe, 0xe9, 0xc1, 0xc1,
	0x86, 0x82, 0x4d, 0xbb, 0x2a, 0x2a, 0xd6, 0x13, 0xd2, 0x1a, 0x30, 0xed, 0x5e, 0x71, 0xa9, 0xf9,
	0x03, 0x65, 0xd9, 0x9c, 0x63, 0x61, 0xbb, 0xb4, 0x09, 0x91, 0x0f, 0xd0, 0x67, 0xf3, 0xb9, 0xe4,
	0x73, 0xa6, 0x85, 0x54, 0x91, 0x3f, 0xf2, 0xc7, 0xfd, 0x13, 0x52, 0x96, 0x76, 0x56, 0x3d, 0xa2,
	0x4d, 0x5a, 0x9c, 0xb7, 0x8a, 0x71, 0x9d, 0x69, 0x89, 0x79, 0xcf, 0x12, 0x23, 0xaf, 0x8d, 0x53,
	0x98, 0x56, 0x58, 0x5e, 0xff, 0x64, 0x50, 0xf2, 0x6f, 0x0c, 0x48, 0xed, 0xb3, 0xf8, 0x13, 0x40,
	0x9d, 0x4f, 0x08, 0x04, 0x19, 0x5b, 0x72, 0x37, 0x00, 0xfc, 0x4d, 0xf6, 0xa0, 0x93, 0x94, 0xbd,
	0xef, 0x24, 0x38, 0x8e, 0x15, 0x4b, 0x0b, 0x6b, 0xc0, 0x5d, 0x6a, 0x83, 0xf8, 0xb7, 0x07, 0x21,
	0x0a, 0x93, 0x37, 0x30, 0xd0, 0x42, 0xb3, 0xf4, 0xa2, 0x90, 0x4c, 0x27, 0x22, 0x43, 0x31, 0x9f,
	0xae, 0x83, 0x86, 0x35, 0x15, 0xcb, 0xbc, 0xd0, 0x7c, 0x76, 0x2e, 0x8a, 0x4c, 0xe3, 0x0b, 0x42,
	0xba, 0x0e, 0x1a, 0x5b, 0x3a, 0xa0, 0x52, 0xf3, 0x51, 0xad, 0x0d, 0x93, 0xb7, 0xf0, 0xbf, 0xe2,
	0x99, 0xfe, 0xca, 0x95, 0x62, 0x73, 0xae, 0xac, 0x66, 0x80, 0x9a, 0x4f, 0x1f, 0x98, 0xf9, 0x2d,
	0x58, 0x5a, 0xbd, 0x3b, 0x44, 0x5e, 0x13, 0x32, 0xf5, 0x25, 0x19, 0x9b, 0xea, 0x64, 0xc5, 0x2d,
	0xa7, 0x6b, 0xeb, 0x5b, 0x03, 0xe3, 0x1f, 0x5d, 0x18, 0x7c, 0x11, 0x93, 0xf3, 0x05, 0x9f, 0xde,
	0xe7, 0x22, 0xc9, 0x34, 0x39, 0x85, 0xae, 0x34, 0x06, 0x28, 0xa7, 0x54, 0xb9, 0x71, 0x8d, 0x76,
	0x8c, 0x26, 0xa1, 0x8e, 0x4a, 0xde, 0x43, 0xb8, 0x10, 0x0a, 0x27, 0x65, 0x72, 0x86, 0x9b, 0x73,
	0x3e, 0x0b, 0xa5, 0xa9, 0x25, 0x9a, 0x0c, 0xb3, 0x1d, 0xa5, 0xb1, 0xb6, 0x64, 0xe0, 0x72, 0x59,
	0x22, 0xf9, 0xd8, 0x34, 0x74, 0x80, 0x8e, 0x78, 0xb5, 0x39, 0xab, 0x76, 0x5f, 0xc3, 0xf1, 0x17,
	0x70, 0x90, 0x4b, 0xbe, 0x4a, 0x44, 0xa1, 0xce, 0x1a, 0x56, 0x0c, 0xb7, 0x5a, 0x71, 0x13, 0x9d,
	0xbc, 0x03, 0x40, 0x1b, 0xa0, 0x53, 0xb0, 0xa5, 0x4f, 0x7c, 0xd9, 0x20, 0x0c, 0xbf, 0x41, 0x68,
	0xb7, 0xc9, 0x7a, 0xd0, 0xae, 0xa1, 0xf1, 0xe0, 0xdf, 0xf7, 0xef, 0xb0, 0x6c, 0xa9, 0x69, 0x50,
	0xe8, 0xda, 0x36, 0xbc, 0x86, 0xc0, 0x74, 0xf1, 0x89, 0xde, 0x10, 0xfe, 0x33, 0x04, 0xf4, 0xbe,
	0x75, 0x7a, 0x15, 0x9b, 0x4b, 0x70, 0xc7, 0x92, 0xd4, 0xba, 0xc0, 0xb7, 0x97, 0xa0, 0x02, 0x86,
	0x77, 0x10, 0x98, 0x2e, 0x37, 0x14, 0xed, 0x96, 0x44, 0xb0, 0x83, 0xc3, 0x75, 0x67, 0x2b, 0xa4,
	0x65, 0x68, 0xce, 0x9c, 0xd1, 0xbe, 0x9a, 0x39, 0x31, 0x17, 0xe1, 0xc5, 0xd1, 0x4c, 0xea, 0xdb,
	0x64, 0xc9, 0x71, 0x40, 0x3e, 0xad, 0x81, 0xe1, 0x2f, 0x0f, 0x7a, 0xd5, 0x60, 0x8c, 0x46, 0x56,
	0x2c, 0x27, 0x5c, 0xba, 0x6f, 0x70, 0x51, 0xfb, 0x50, 0x74, 0x9e, 0x77, 0x28, 0x8e, 0xa0, 0x67,
	0xd6, 0x29, 0xe5, 0x9a, 0xcf, 0x5c, 0xbf, 0x6a, 0xa0, 0x3e, 0x23, 0xc1, 0xf6, 0x33, 0x32, 0xb1,
	0xff, 0xde, 0x4e, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x50, 0xb5, 0xaf, 0xf6, 0x06, 0x00,
	0x00,
}
