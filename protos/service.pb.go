// Code generated by protoc-gen-gogo.
// source: service.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	JobIdRequest
	SimpleCallReply
	CreateJobRequest
	CreateJobReply
	GetJobStatusReply
	GetJobResultReply
*/
package protos

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type JobStatus int32

const (
	JobStatus_Created   JobStatus = 0
	JobStatus_Running   JobStatus = 1
	JobStatus_Completed JobStatus = 2
	JobStatus_Cancelled JobStatus = 3
	JobStatus_Failed    JobStatus = 4
)

var JobStatus_name = map[int32]string{
	0: "Created",
	1: "Running",
	2: "Completed",
	3: "Cancelled",
	4: "Failed",
}
var JobStatus_value = map[string]int32{
	"Created":   0,
	"Running":   1,
	"Completed": 2,
	"Cancelled": 3,
	"Failed":    4,
}

func (x JobStatus) String() string {
	return proto.EnumName(JobStatus_name, int32(x))
}
func (JobStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptorService, []int{0} }

type CallStatus int32

const (
	CallStatus_OK                      CallStatus = 0
	CallStatus_INTERNAL_ERROR          CallStatus = 1
	CallStatus_ERROR_INVALID_JOB       CallStatus = 2
	CallStatus_ERROR_INVALID_STORE     CallStatus = 3
	CallStatus_ERROR_INVALID_ALGORITHM CallStatus = 4
)

var CallStatus_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "ERROR_INVALID_JOB",
	3: "ERROR_INVALID_STORE",
	4: "ERROR_INVALID_ALGORITHM",
}
var CallStatus_value = map[string]int32{
	"OK":                      0,
	"INTERNAL_ERROR":          1,
	"ERROR_INVALID_JOB":       2,
	"ERROR_INVALID_STORE":     3,
	"ERROR_INVALID_ALGORITHM": 4,
}

func (x CallStatus) String() string {
	return proto.EnumName(CallStatus_name, int32(x))
}
func (CallStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptorService, []int{1} }

type JobIdRequest struct {
	JobId string `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
}

func (m *JobIdRequest) Reset()                    { *m = JobIdRequest{} }
func (m *JobIdRequest) String() string            { return proto.CompactTextString(m) }
func (*JobIdRequest) ProtoMessage()               {}
func (*JobIdRequest) Descriptor() ([]byte, []int) { return fileDescriptorService, []int{0} }

func (m *JobIdRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type SimpleCallReply struct {
	Status CallStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.CallStatus" json:"status,omitempty"`
}

func (m *SimpleCallReply) Reset()                    { *m = SimpleCallReply{} }
func (m *SimpleCallReply) String() string            { return proto.CompactTextString(m) }
func (*SimpleCallReply) ProtoMessage()               {}
func (*SimpleCallReply) Descriptor() ([]byte, []int) { return fileDescriptorService, []int{1} }

func (m *SimpleCallReply) GetStatus() CallStatus {
	if m != nil {
		return m.Status
	}
	return CallStatus_OK
}

type CreateJobRequest struct {
	Label           string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Store           string `protobuf:"bytes,2,opt,name=store,proto3" json:"store,omitempty"`
	StoreParams     []byte `protobuf:"bytes,3,opt,name=storeParams,proto3" json:"storeParams,omitempty"`
	Algorithm       string `protobuf:"bytes,4,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	AlgorithmParams []byte `protobuf:"bytes,5,opt,name=algorithmParams,proto3" json:"algorithmParams,omitempty"`
	VerticesPerTask int32  `protobuf:"varint,6,opt,name=verticesPerTask,proto3" json:"verticesPerTask,omitempty"`
}

func (m *CreateJobRequest) Reset()                    { *m = CreateJobRequest{} }
func (m *CreateJobRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateJobRequest) ProtoMessage()               {}
func (*CreateJobRequest) Descriptor() ([]byte, []int) { return fileDescriptorService, []int{2} }

func (m *CreateJobRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *CreateJobRequest) GetStore() string {
	if m != nil {
		return m.Store
	}
	return ""
}

func (m *CreateJobRequest) GetStoreParams() []byte {
	if m != nil {
		return m.StoreParams
	}
	return nil
}

func (m *CreateJobRequest) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *CreateJobRequest) GetAlgorithmParams() []byte {
	if m != nil {
		return m.AlgorithmParams
	}
	return nil
}

func (m *CreateJobRequest) GetVerticesPerTask() int32 {
	if m != nil {
		return m.VerticesPerTask
	}
	return 0
}

type CreateJobReply struct {
	Status CallStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.CallStatus" json:"status,omitempty"`
	JobId  string     `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
}

func (m *CreateJobReply) Reset()                    { *m = CreateJobReply{} }
func (m *CreateJobReply) String() string            { return proto.CompactTextString(m) }
func (*CreateJobReply) ProtoMessage()               {}
func (*CreateJobReply) Descriptor() ([]byte, []int) { return fileDescriptorService, []int{3} }

func (m *CreateJobReply) GetStatus() CallStatus {
	if m != nil {
		return m.Status
	}
	return CallStatus_OK
}

func (m *CreateJobReply) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type GetJobStatusReply struct {
	Status      CallStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.CallStatus" json:"status,omitempty"`
	JobStatus   JobStatus  `protobuf:"varint,2,opt,name=jobStatus,proto3,enum=protos.JobStatus" json:"jobStatus,omitempty"`
	Superstep   int32      `protobuf:"varint,3,opt,name=superstep,proto3" json:"superstep,omitempty"`
	PercentDone int32      `protobuf:"varint,4,opt,name=percentDone,proto3" json:"percentDone,omitempty"`
}

func (m *GetJobStatusReply) Reset()                    { *m = GetJobStatusReply{} }
func (m *GetJobStatusReply) String() string            { return proto.CompactTextString(m) }
func (*GetJobStatusReply) ProtoMessage()               {}
func (*GetJobStatusReply) Descriptor() ([]byte, []int) { return fileDescriptorService, []int{4} }

func (m *GetJobStatusReply) GetStatus() CallStatus {
	if m != nil {
		return m.Status
	}
	return CallStatus_OK
}

func (m *GetJobStatusReply) GetJobStatus() JobStatus {
	if m != nil {
		return m.JobStatus
	}
	return JobStatus_Created
}

func (m *GetJobStatusReply) GetSuperstep() int32 {
	if m != nil {
		return m.Superstep
	}
	return 0
}

func (m *GetJobStatusReply) GetPercentDone() int32 {
	if m != nil {
		return m.PercentDone
	}
	return 0
}

type GetJobResultReply struct {
	Status CallStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.CallStatus" json:"status,omitempty"`
	JobId  string     `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Result []byte     `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (m *GetJobResultReply) Reset()                    { *m = GetJobResultReply{} }
func (m *GetJobResultReply) String() string            { return proto.CompactTextString(m) }
func (*GetJobResultReply) ProtoMessage()               {}
func (*GetJobResultReply) Descriptor() ([]byte, []int) { return fileDescriptorService, []int{5} }

func (m *GetJobResultReply) GetStatus() CallStatus {
	if m != nil {
		return m.Status
	}
	return CallStatus_OK
}

func (m *GetJobResultReply) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *GetJobResultReply) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*JobIdRequest)(nil), "protos.JobIdRequest")
	proto.RegisterType((*SimpleCallReply)(nil), "protos.SimpleCallReply")
	proto.RegisterType((*CreateJobRequest)(nil), "protos.CreateJobRequest")
	proto.RegisterType((*CreateJobReply)(nil), "protos.CreateJobReply")
	proto.RegisterType((*GetJobStatusReply)(nil), "protos.GetJobStatusReply")
	proto.RegisterType((*GetJobResultReply)(nil), "protos.GetJobResultReply")
	proto.RegisterEnum("protos.JobStatus", JobStatus_name, JobStatus_value)
	proto.RegisterEnum("protos.CallStatus", CallStatus_name, CallStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Service service

type ServiceClient interface {
	CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*CreateJobReply, error)
	CancelJob(ctx context.Context, in *JobIdRequest, opts ...grpc.CallOption) (*SimpleCallReply, error)
	GetJobStatus(ctx context.Context, in *JobIdRequest, opts ...grpc.CallOption) (*GetJobStatusReply, error)
	GetJobResult(ctx context.Context, in *JobIdRequest, opts ...grpc.CallOption) (*GetJobResultReply, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*CreateJobReply, error) {
	out := new(CreateJobReply)
	err := grpc.Invoke(ctx, "/protos.Service/CreateJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) CancelJob(ctx context.Context, in *JobIdRequest, opts ...grpc.CallOption) (*SimpleCallReply, error) {
	out := new(SimpleCallReply)
	err := grpc.Invoke(ctx, "/protos.Service/CancelJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetJobStatus(ctx context.Context, in *JobIdRequest, opts ...grpc.CallOption) (*GetJobStatusReply, error) {
	out := new(GetJobStatusReply)
	err := grpc.Invoke(ctx, "/protos.Service/GetJobStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetJobResult(ctx context.Context, in *JobIdRequest, opts ...grpc.CallOption) (*GetJobResultReply, error) {
	out := new(GetJobResultReply)
	err := grpc.Invoke(ctx, "/protos.Service/GetJobResult", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Service service

type ServiceServer interface {
	CreateJob(context.Context, *CreateJobRequest) (*CreateJobReply, error)
	CancelJob(context.Context, *JobIdRequest) (*SimpleCallReply, error)
	GetJobStatus(context.Context, *JobIdRequest) (*GetJobStatusReply, error)
	GetJobResult(context.Context, *JobIdRequest) (*GetJobResultReply, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Service/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).CreateJob(ctx, req.(*CreateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_CancelJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).CancelJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Service/CancelJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).CancelJob(ctx, req.(*JobIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Service/GetJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetJobStatus(ctx, req.(*JobIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetJobResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetJobResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Service/GetJobResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetJobResult(ctx, req.(*JobIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJob",
			Handler:    _Service_CreateJob_Handler,
		},
		{
			MethodName: "CancelJob",
			Handler:    _Service_CancelJob_Handler,
		},
		{
			MethodName: "GetJobStatus",
			Handler:    _Service_GetJobStatus_Handler,
		},
		{
			MethodName: "GetJobResult",
			Handler:    _Service_GetJobResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptorService) }

var fileDescriptorService = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0x51, 0x6f, 0xda, 0x3c,
	0x14, 0x25, 0x29, 0xa4, 0xca, 0x2d, 0xa5, 0xc1, 0x5f, 0xbf, 0x92, 0x75, 0x7b, 0x40, 0xd1, 0x1e,
	0x10, 0x0f, 0x9d, 0xc4, 0x5e, 0x37, 0x4d, 0x8c, 0xb2, 0x0e, 0xc6, 0x48, 0x65, 0xd0, 0x5e, 0x51,
	0x80, 0xab, 0x2e, 0x9d, 0x49, 0x32, 0xdb, 0xa9, 0xd4, 0x3f, 0xb1, 0xdf, 0xb2, 0xdf, 0xb2, 0x5f,
	0x34, 0xd9, 0x21, 0x24, 0x65, 0x9b, 0xb4, 0x4a, 0x7b, 0xc2, 0xe7, 0xdc, 0x93, 0x63, 0xfb, 0xf8,
	0x5e, 0xe0, 0x58, 0x20, 0xbf, 0x0b, 0x57, 0x78, 0x91, 0xf0, 0x58, 0xc6, 0xc4, 0xd2, 0x3f, 0xc2,
	0x7b, 0x0e, 0xf5, 0x71, 0xbc, 0x1c, 0xad, 0x29, 0x7e, 0x4d, 0x51, 0x48, 0x72, 0x0a, 0xb5, 0x5b,
	0x85, 0x5d, 0xa3, 0x6d, 0x74, 0x6c, 0x9a, 0x01, 0xef, 0x35, 0x9c, 0xcc, 0xc2, 0x4d, 0xc2, 0x70,
	0x10, 0x30, 0x46, 0x31, 0x61, 0xf7, 0xa4, 0x0b, 0x96, 0x90, 0x81, 0x4c, 0x85, 0x56, 0x36, 0x7a,
	0x24, 0x33, 0x16, 0x17, 0x4a, 0x32, 0xd3, 0x15, 0xba, 0x55, 0x78, 0x3f, 0x0c, 0x70, 0x06, 0x1c,
	0x03, 0x89, 0xe3, 0x78, 0x59, 0xda, 0x89, 0x05, 0x4b, 0x64, 0xf9, 0x4e, 0x1a, 0x28, 0x56, 0xc8,
	0x98, 0xa3, 0x6b, 0x66, 0xac, 0x06, 0xa4, 0x0d, 0x47, 0x7a, 0x71, 0x1d, 0xf0, 0x60, 0x23, 0xdc,
	0x83, 0xb6, 0xd1, 0xa9, 0xd3, 0x32, 0x45, 0x9e, 0x81, 0x1d, 0xb0, 0x9b, 0x98, 0x87, 0xf2, 0xf3,
	0xc6, 0xad, 0xea, 0x6f, 0x0b, 0x82, 0x74, 0xe0, 0x64, 0x07, 0xb6, 0x1e, 0x35, 0xed, 0xb1, 0x4f,
	0x2b, 0xe5, 0x1d, 0x72, 0x19, 0xae, 0x50, 0x5c, 0x23, 0x9f, 0x07, 0xe2, 0x8b, 0x6b, 0xb5, 0x8d,
	0x4e, 0x8d, 0xee, 0xd3, 0x1e, 0x85, 0x46, 0xe9, 0x4e, 0x8f, 0x8c, 0xa4, 0xc8, 0xd9, 0x2c, 0xe7,
	0xfc, 0xdd, 0x80, 0xe6, 0x15, 0xca, 0x71, 0xbc, 0xdc, 0xca, 0x1f, 0xed, 0xfb, 0x02, 0xec, 0xdb,
	0xfc, 0x6b, 0xed, 0xdd, 0xe8, 0x35, 0x73, 0x79, 0x61, 0x5b, 0x68, 0x54, 0x70, 0x22, 0x4d, 0x90,
	0x0b, 0x89, 0x89, 0x0e, 0xb6, 0x46, 0x0b, 0x42, 0x05, 0x9f, 0x20, 0x5f, 0x61, 0x24, 0x2f, 0xe3,
	0x08, 0x75, 0xb0, 0x35, 0x5a, 0xa6, 0xbc, 0x4d, 0x7e, 0x62, 0x8a, 0x22, 0x65, 0xf2, 0x1f, 0x25,
	0x41, 0xce, 0xc0, 0xe2, 0xda, 0x70, 0xfb, 0xd8, 0x5b, 0xd4, 0xf5, 0xc1, 0xde, 0x5d, 0x83, 0x1c,
	0xc1, 0x61, 0xf6, 0x04, 0x6b, 0xa7, 0xa2, 0x00, 0x4d, 0xa3, 0x28, 0x8c, 0x6e, 0x1c, 0x83, 0x1c,
	0x83, 0x3d, 0x88, 0x55, 0xc3, 0xaa, 0x9a, 0xa9, 0x61, 0x10, 0xad, 0x90, 0x31, 0x5c, 0x3b, 0x07,
	0x04, 0xc0, 0x7a, 0x17, 0x84, 0x6a, 0x5d, 0xed, 0xa6, 0x00, 0xc5, 0xa1, 0x88, 0x05, 0xa6, 0xff,
	0xc1, 0xa9, 0x10, 0x02, 0x8d, 0xd1, 0x74, 0x3e, 0xa4, 0xd3, 0xfe, 0x64, 0x31, 0xa4, 0xd4, 0xa7,
	0x8e, 0x41, 0xfe, 0x87, 0xa6, 0x5e, 0x2e, 0x46, 0xd3, 0x4f, 0xfd, 0xc9, 0xe8, 0x72, 0x31, 0xf6,
	0xdf, 0x3a, 0x26, 0x69, 0xc1, 0x7f, 0x0f, 0xe9, 0xd9, 0xdc, 0xa7, 0x43, 0xe7, 0x80, 0x3c, 0x85,
	0xd6, 0xc3, 0x42, 0x7f, 0x72, 0xe5, 0xd3, 0xd1, 0xfc, 0xfd, 0x47, 0xa7, 0xda, 0xfb, 0x66, 0xc2,
	0xe1, 0x2c, 0x9b, 0x48, 0xf2, 0x06, 0xec, 0x5d, 0x27, 0x11, 0x77, 0x17, 0xd5, 0xde, 0xc0, 0x9c,
	0x9f, 0xfd, 0xa6, 0x92, 0xb0, 0x7b, 0xaf, 0x42, 0x5e, 0xe5, 0xd7, 0x53, 0x06, 0xa7, 0xa5, 0xe7,
	0xde, 0xcd, 0xf5, 0x79, 0x2b, 0x67, 0xf7, 0xe6, 0xd8, 0xab, 0x90, 0x3e, 0xd4, 0xcb, 0x3d, 0xf7,
	0x07, 0x83, 0x27, 0x39, 0xfb, 0x4b, 0x7f, 0x96, 0x2d, 0xb2, 0x26, 0xf8, 0x3b, 0x8b, 0x52, 0xc3,
	0x78, 0x95, 0x65, 0xf6, 0x87, 0xf4, 0xf2, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0x29, 0xa4,
	0x15, 0xa8, 0x04, 0x00, 0x00,
}
