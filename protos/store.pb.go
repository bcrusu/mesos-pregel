// Code generated by protoc-gen-gogo.
// source: store.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	store.proto

It has these top-level messages:
	CassandraStoreParams
	CassandraTokenRange
*/
package protos

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type CassandraStoreParams struct {
	Hosts             []string                           `protobuf:"bytes,1,rep,name=hosts" json:"hosts,omitempty"`
	Keyspace          string                             `protobuf:"bytes,2,opt,name=keyspace,proto3" json:"keyspace,omitempty"`
	ReplicationFactor int32                              `protobuf:"varint,3,opt,name=replicationFactor,proto3" json:"replicationFactor,omitempty"`
	VerticesTable     string                             `protobuf:"bytes,4,opt,name=verticesTable,proto3" json:"verticesTable,omitempty"`
	EdgesTable        string                             `protobuf:"bytes,5,opt,name=edgesTable,proto3" json:"edgesTable,omitempty"`
	BatchOptions      *CassandraStoreParams_BatchOptions `protobuf:"bytes,6,opt,name=batchOptions" json:"batchOptions,omitempty"`
	Timeout           int64                              `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (m *CassandraStoreParams) Reset()                    { *m = CassandraStoreParams{} }
func (m *CassandraStoreParams) String() string            { return proto.CompactTextString(m) }
func (*CassandraStoreParams) ProtoMessage()               {}
func (*CassandraStoreParams) Descriptor() ([]byte, []int) { return fileDescriptorStore, []int{0} }

func (m *CassandraStoreParams) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *CassandraStoreParams) GetKeyspace() string {
	if m != nil {
		return m.Keyspace
	}
	return ""
}

func (m *CassandraStoreParams) GetReplicationFactor() int32 {
	if m != nil {
		return m.ReplicationFactor
	}
	return 0
}

func (m *CassandraStoreParams) GetVerticesTable() string {
	if m != nil {
		return m.VerticesTable
	}
	return ""
}

func (m *CassandraStoreParams) GetEdgesTable() string {
	if m != nil {
		return m.EdgesTable
	}
	return ""
}

func (m *CassandraStoreParams) GetBatchOptions() *CassandraStoreParams_BatchOptions {
	if m != nil {
		return m.BatchOptions
	}
	return nil
}

func (m *CassandraStoreParams) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type CassandraStoreParams_BatchOptions struct {
	MaxSize  int32 `protobuf:"varint,1,opt,name=MaxSize,proto3" json:"MaxSize,omitempty"`
	MaxBytes int32 `protobuf:"varint,2,opt,name=MaxBytes,proto3" json:"MaxBytes,omitempty"`
}

func (m *CassandraStoreParams_BatchOptions) Reset()         { *m = CassandraStoreParams_BatchOptions{} }
func (m *CassandraStoreParams_BatchOptions) String() string { return proto.CompactTextString(m) }
func (*CassandraStoreParams_BatchOptions) ProtoMessage()    {}
func (*CassandraStoreParams_BatchOptions) Descriptor() ([]byte, []int) {
	return fileDescriptorStore, []int{0, 0}
}

func (m *CassandraStoreParams_BatchOptions) GetMaxSize() int32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *CassandraStoreParams_BatchOptions) GetMaxBytes() int32 {
	if m != nil {
		return m.MaxBytes
	}
	return 0
}

type CassandraTokenRange struct {
	Partitioner string `protobuf:"bytes,1,opt,name=partitioner,proto3" json:"partitioner,omitempty"`
	StartToken  string `protobuf:"bytes,2,opt,name=startToken,proto3" json:"startToken,omitempty"`
	EndToken    string `protobuf:"bytes,3,opt,name=endToken,proto3" json:"endToken,omitempty"`
}

func (m *CassandraTokenRange) Reset()                    { *m = CassandraTokenRange{} }
func (m *CassandraTokenRange) String() string            { return proto.CompactTextString(m) }
func (*CassandraTokenRange) ProtoMessage()               {}
func (*CassandraTokenRange) Descriptor() ([]byte, []int) { return fileDescriptorStore, []int{1} }

func (m *CassandraTokenRange) GetPartitioner() string {
	if m != nil {
		return m.Partitioner
	}
	return ""
}

func (m *CassandraTokenRange) GetStartToken() string {
	if m != nil {
		return m.StartToken
	}
	return ""
}

func (m *CassandraTokenRange) GetEndToken() string {
	if m != nil {
		return m.EndToken
	}
	return ""
}

func init() {
	proto.RegisterType((*CassandraStoreParams)(nil), "protos.CassandraStoreParams")
	proto.RegisterType((*CassandraStoreParams_BatchOptions)(nil), "protos.CassandraStoreParams.BatchOptions")
	proto.RegisterType((*CassandraTokenRange)(nil), "protos.CassandraTokenRange")
}

func init() { proto.RegisterFile("store.proto", fileDescriptorStore) }

var fileDescriptorStore = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x51, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0x4d, 0xe9, 0x57, 0xf8, 0x18, 0xf0, 0xe0, 0xca, 0x61, 0xc3, 0xc1, 0x34, 0xc4, 0x43, 0x4d,
	0x0c, 0x07, 0xfd, 0x07, 0x68, 0xbc, 0x11, 0xcd, 0xc2, 0x1f, 0x18, 0xca, 0x04, 0x1a, 0xa0, 0xdb,
	0xec, 0x8c, 0x06, 0xfc, 0xcb, 0xfe, 0x09, 0xd3, 0xad, 0x6d, 0x8a, 0x7a, 0x6a, 0xde, 0x9b, 0x37,
	0xaf, 0xfb, 0xde, 0xc0, 0x80, 0xc5, 0x3a, 0x9a, 0x16, 0xce, 0x8a, 0x55, 0x5d, 0xff, 0xe1, 0xc9,
	0x67, 0x07, 0x46, 0x8f, 0xc8, 0x8c, 0xf9, 0xda, 0xe1, 0xa2, 0x14, 0xbc, 0xa2, 0xc3, 0x03, 0xab,
	0x11, 0x44, 0x5b, 0xcb, 0xc2, 0x3a, 0x88, 0xc3, 0xa4, 0x6f, 0x2a, 0xa0, 0xc6, 0xf0, 0x7f, 0x47,
	0x27, 0x2e, 0x30, 0x25, 0xdd, 0x89, 0x83, 0xa4, 0x6f, 0x1a, 0xac, 0xee, 0xe0, 0xd2, 0x51, 0xb1,
	0xcf, 0x52, 0x94, 0xcc, 0xe6, 0xcf, 0x98, 0x8a, 0x75, 0x3a, 0x8c, 0x83, 0x24, 0x32, 0xbf, 0x07,
	0xea, 0x06, 0x2e, 0xde, 0xc9, 0x49, 0x96, 0x12, 0x2f, 0x71, 0xb5, 0x27, 0xfd, 0xcf, 0xdb, 0x9d,
	0x93, 0xea, 0x1a, 0x80, 0xd6, 0x9b, 0x5a, 0x12, 0x79, 0x49, 0x8b, 0x51, 0x73, 0x18, 0xae, 0x50,
	0xd2, 0xed, 0x4b, 0x51, 0x5a, 0xb3, 0xee, 0xc6, 0x41, 0x32, 0xb8, 0xbf, 0xad, 0x42, 0xf2, 0xf4,
	0xaf, 0x64, 0xd3, 0x59, 0x6b, 0xc1, 0x9c, 0xad, 0x2b, 0x0d, 0x3d, 0xc9, 0x0e, 0x64, 0xdf, 0x44,
	0xf7, 0xe2, 0x20, 0x09, 0x4d, 0x0d, 0xc7, 0x4f, 0x30, 0x9c, 0xfd, 0x50, 0xce, 0xf1, 0xb8, 0xc8,
	0x3e, 0x48, 0x07, 0x3e, 0x62, 0x0d, 0xcb, 0x8a, 0xe6, 0x78, 0x9c, 0x9d, 0x84, 0xd8, 0x57, 0x14,
	0x99, 0x06, 0x4f, 0x18, 0xae, 0x9a, 0x27, 0x2d, 0xed, 0x8e, 0x72, 0x83, 0xf9, 0x86, 0x54, 0x0c,
	0x83, 0x02, 0x9d, 0x64, 0xa5, 0x35, 0x39, 0x6f, 0xd8, 0x37, 0x6d, 0xaa, 0xec, 0x81, 0x05, 0x9d,
	0xf8, 0xa5, 0xef, 0xe6, 0x5b, 0x4c, 0xf9, 0x53, 0xca, 0xd7, 0xd5, 0x34, 0xac, 0xee, 0x52, 0xe3,
	0x55, 0x75, 0xea, 0x87, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x75, 0x3e, 0x85, 0xed, 0x00, 0x02,
	0x00, 0x00,
}
